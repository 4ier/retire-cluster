version: '3.8'

services:
  retire-cluster-main:
    container_name: retire-cluster-main
    image: retire-cluster:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    
    restart: unless-stopped
    
    ports:
      - "${CLUSTER_PORT:-8080}:8080"  # Main node server
      - "${WEB_PORT:-5000}:5000"      # Web dashboard
    
    volumes:
      # Configuration
      - ${DATA_PATH:-./data}/config:/data/config
      # Database persistence
      - ${DATA_PATH:-./data}/database:/data/database
      # Logs
      - ${DATA_PATH:-./data}/logs:/data/logs
    
    environment:
      - TZ=${TZ:-UTC}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
      # Optional: Override config values
      - CLUSTER_HOST=${CLUSTER_HOST:-0.0.0.0}
      - CLUSTER_PORT=${CLUSTER_PORT:-8080}
      - WEB_PORT=${WEB_PORT:-5000}
      - DATABASE_PATH=/data/database/cluster.db
    
    networks:
      - retire-cluster-net
    
    # Resource limits (adjust based on NAS capabilities)
    deploy:
      resources:
        limits:
          cpus: '${CPU_LIMIT:-2.0}'
          memory: ${MEMORY_LIMIT:-2G}
        reservations:
          cpus: '${CPU_RESERVATION:-0.5}'
          memory: ${MEMORY_RESERVATION:-512M}
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for better performance and SSL
  nginx:
    container_name: retire-cluster-proxy
    image: nginx:alpine
    restart: unless-stopped
    profiles:
      - with-proxy
    
    ports:
      - "${PROXY_PORT:-80}:80"
      - "${PROXY_SSL_PORT:-443}:443"
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ${DATA_PATH:-./data}/nginx_logs:/var/log/nginx
    
    depends_on:
      - retire-cluster-main
    
    networks:
      - retire-cluster-net
    
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  retire-cluster-net:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET:-172.20.0.0/16}

# Optional: Named volumes for better management
volumes:
  config:
    driver: local
  database:
    driver: local
  logs:
    driver: local